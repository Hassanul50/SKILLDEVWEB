// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SKILLDEVWEB.DataAccess.Data;

#nullable disable

namespace SKILLDEVWEB.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240816204431_AddedProductModel")]
    partial class AddedProductModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SKILLDEVWEB.Model.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Action",
                            DisplayOrder = 1
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Scifi",
                            DisplayOrder = 2
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "History",
                            DisplayOrder = 3
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Cartoon",
                            DisplayOrder = 4
                        });
                });

            modelBuilder.Entity("SKILLDEVWEB.Model.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Author = "ABS",
                            Description = "TEST",
                            ISBN = "ABC-123",
                            ListPrice = 30.0,
                            Price = 25.0,
                            Price100 = 18.0,
                            Price50 = 20.0,
                            Title = "ABC"
                        },
                        new
                        {
                            ProductId = 2,
                            Author = "ABS-2",
                            Description = "TEST-2",
                            ISBN = "ABC-645",
                            ListPrice = 54.0,
                            Price = 47.0,
                            Price100 = 20.0,
                            Price50 = 32.0,
                            Title = "TEST-2"
                        },
                        new
                        {
                            ProductId = 3,
                            Author = "ABS-3",
                            Description = "TEST-3",
                            ISBN = "ABC-1485",
                            ListPrice = 301.0,
                            Price = 252.0,
                            Price100 = 180.0,
                            Price50 = 208.0,
                            Title = "ABC-3"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
